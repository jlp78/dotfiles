#! /usr/bin/perl

# strip secrets out of dot files, replace with keywords, keep secrets
# somewhere safe(?)
#
# this is based on the dotsecrets package at
# https://github.com/oohlaf/dotsecrets.git

use strict;

use YAML::XS qw(DumpFile LoadFile);
use Digest::SHA qw(sha1_hex);
use NDBM_File;
use Fcntl;

our $configFile = $ENV{HOME} . '/Git/dotfiles/dot.yaml';
our $pwFile = $ENV{HOME} . '/Dropbox/dotsecrets';

sub munge {
    my $pw = shift;
    my $digest = sha1_hex($pw);
    return('SECRET:' . $digest . ':SECRET');
}

sub store {
    my $id = shift;
    my $pw = shift;
    my $token = shift;

    my %h;
    tie %h, 'NDBM_File', $pwFile, O_RDWR|O_CREAT, 0600 or die "couldn't tie $pwFile: $!\n";
    $h{$id} = join($;, $pw, $token);
    untie %h or die "couldn't untie $pwFile: $!\n";
}

sub retrieve {
    my $id = shift;
    my $token = shift;

    my %h;
    tie %h, 'NDBM_File', $pwFile, O_RDWR, 0600 or die "couldn't tie $pwFile: $!\n";
    my $i = $h{$id};
    untie %h or die "couldn't untie $pwFile: $!\n";
    my ($pw, $tk) = split(m/$;/, $i);
    die "id $id and token $token didn't match $tk\n" unless $tk eq $token;
    return $pw;
}

sub clean {
    my $rules = shift;

    while (<>) {
        study $_;
        foreach my $id (keys(%$rules)) {
            my $re = $rules->{$id};
            if (m/$re/) {
                my $text = $2;
                if ($text =~ m'^SECRET:' and $text =~ m':SECRET$') {
                    # already clean, don't clean it again!
                } else {
                    my $m = munge($text);
                    s/$re/$1$m$3/;
                    store($id, $text, $m);
                }
            }
        }
        print $_;
    }
}

sub smudge {
    my $rules = shift;

    while (<>) {
        study $_;
        foreach my $id (keys(%$rules)) {
            my $re = $rules->{$id};
            # embed SECRET in the re
            my @re = split(m/\)\(/, $re);
            splice(@re, 1, 0, 'SECRET:');
            splice(@re, 3, 0, ':SECRET');
            $re = join(')(', @re);
            if (m/$re/) {
                my $pw = retrieve($id, 'SECRET:' . $3 . ':SECRET');
                s/$re/$1$pw$5/;
            }
        }
        print $_;
    }
}

sub main {
    my $config = LoadFile($configFile) or die "unable to load $configFile: $!\n";
    my $op = shift(@ARGV);
    my $file = shift(@ARGV);
    my $of;

    if (not defined($file)) {
        die "file not specified\n";
    }
    if (not exists $config->{$file}) {
        die "$file not in config\n";
    }

    if (not defined($op)) {
        die "no operation specified, use one of 'smudge' or 'clean'\n";
    }
    if ($op eq 'smudge') {
        $of = \&smudge;
    } elsif ($op eq 'clean') {
        $of = \&clean;
    } else {
        die "unknown operation $op, use one of 'smudge' or 'clean'\n";
    }

    $of->($config->{$file});
}

&main();
