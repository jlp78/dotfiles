#! /bin/sh

dns_servers="10.56.0.155 192.168.1.1"
resolv_files="/etc/resolv.conf /var/run/resolv.conf"

# get service
service=$(echo "show State:/Network/Global/IPv4" | scutil |
	    grep -oE '[a-fA-F0-9]{8}-([a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}')
# echo found service $service

service_dns=$(echo "show State:/Network/Service/$service/DNS" | scutil |
		grep -oE '([0-9]{1,3}[\.]){3}[0-9]{1,3}' | xargs)
echo old DNS servers $service_dns

echo setting new DNS to $dns_servers
sudo scutil <<-EOL
  open
  get State:/Network/Service/$service/DNS
  d.add ServerAddresses * $dns_servers
  set State:/Network/Service/$service/DNS
  close
EOL

service_dns=$(echo "show State:/Network/Service/$service/DNS" | scutil |
		grep -oE '([0-9]{1,3}[\.]){3}[0-9]{1,3}' | xargs)
echo DNS servers now $service_dns

echo updating $resolv_files
sudo perl -Tpi -e '
  BEGIN {
    # separate dns servers from resolv.conf files and untaint
    while (scalar(@ARGV) > 0) {
      $_ = shift(@ARGV);
      last if $_ eq "--";
      next unless m/^(\d+\.\d+\.\d+\.\d+)$/;
      push(@servers, $1);
    }
    while (scalar(@ARGV) > 0) {
      $file = shift(@ARGV);
      $file =~ m/^(.*)$/;
      $file = $1;
      next unless -f $file;
      push(@files, $file);
    }
    @ARGV = @files;
  }

  sub print_dns_servers {
    foreach $s (@servers) {
      print "nameserver $s\n";
    }
  }

  $_ = "" if m/^nameserver /;             # remove old name servers
  print_dns_servers() if m/^search /;     # add new name servers
  ' $dns_servers -- $resolv_files

echo flushing resolver
sudo killall -HUP mDNSResponder

