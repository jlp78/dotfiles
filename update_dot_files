#! /usr/bin/perl

# update_dot_files - copy files in the current directory that start
#                    with an underscore (_) over files starting with
#                    a dot (.) in the user's home directory.

use File::Compare;
use File::Find;
use File::Copy;

if ($ARGV[0] eq '-f') {
  $force++;                   # force overwrites
}

sub map_file {
  my $ufile = shift;
  my $dfile = $ufile;
  $dfile =~ s/^_/./;
  $dfile = $ENV{HOME} . '/' . $dfile;
  return $dfile;
}

find({ wanted => sub { -f $_ and push(@files, $_); },
       no_chdir => 1,}, <_*>);

foreach $ufile (@files) {
  $ufile =~ s,^\./,,;
  $dfile = $ufile; $dfile =~ s,^_,.,;
  $dfile = $ENV{HOME} . '/' . $dfile;

  if (not -e $dfile) {
    push(@needs_update, $ufile);
  } elsif (compare($dfile, $ufile)) {
    # files are different, check dates
    if (-M $dfile < -M $ufile) {
      push(@local_mods, $ufile);
    } else {
      push(@needs_update, $ufile);
    }
  }
}

if (scalar(@local_mods) > 0) {
  print "These files have local mods:\n";
  foreach $file (@local_mods) {
    print "  $file\n";
  }
  if ($force) {
    print "Updating them, anyway.\n";
    push(@needs_update, @local_mods);
  } else {
    print "Not updating them.\n";
  }
}

if (scalar(@needs_update)) {
  print "Updating ...\n";
  foreach $ufile (@needs_update) {
    $dfile = $ufile;
    $dfile =~ s,^_,.,;
    $dfile = $ENV{HOME} . '/' . $dfile;
    print "  copying $ufile over $dfile\n";
    copy($ufile, $dfile);
  }
  print "done.\n";
} else {
  print "Nothing to do.\n";
}
